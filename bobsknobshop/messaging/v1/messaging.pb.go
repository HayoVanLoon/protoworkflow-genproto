// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bobsknobshop/messaging/v1/messaging.proto

package messaging

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateMessageRequest struct {
	// Types that are valid to be assigned to Message:
	//	*CreateMessageRequest_CustomerMessage
	Message              isCreateMessageRequest_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CreateMessageRequest) Reset()         { *m = CreateMessageRequest{} }
func (m *CreateMessageRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMessageRequest) ProtoMessage()    {}
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{0}
}

func (m *CreateMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMessageRequest.Unmarshal(m, b)
}
func (m *CreateMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMessageRequest.Marshal(b, m, deterministic)
}
func (m *CreateMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMessageRequest.Merge(m, src)
}
func (m *CreateMessageRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMessageRequest.Size(m)
}
func (m *CreateMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMessageRequest proto.InternalMessageInfo

type isCreateMessageRequest_Message interface {
	isCreateMessageRequest_Message()
}

type CreateMessageRequest_CustomerMessage struct {
	CustomerMessage *CustomerMessage `protobuf:"bytes,1,opt,name=customer_message,json=customerMessage,proto3,oneof"`
}

func (*CreateMessageRequest_CustomerMessage) isCreateMessageRequest_Message() {}

func (m *CreateMessageRequest) GetMessage() isCreateMessageRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CreateMessageRequest) GetCustomerMessage() *CustomerMessage {
	if x, ok := m.GetMessage().(*CreateMessageRequest_CustomerMessage); ok {
		return x.CustomerMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateMessageRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateMessageRequest_OneofMarshaler, _CreateMessageRequest_OneofUnmarshaler, _CreateMessageRequest_OneofSizer, []interface{}{
		(*CreateMessageRequest_CustomerMessage)(nil),
	}
}

func _CreateMessageRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateMessageRequest)
	// message
	switch x := m.Message.(type) {
	case *CreateMessageRequest_CustomerMessage:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateMessageRequest.Message has unexpected type %T", x)
	}
	return nil
}

func _CreateMessageRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateMessageRequest)
	switch tag {
	case 1: // message.customer_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerMessage)
		err := b.DecodeMessage(msg)
		m.Message = &CreateMessageRequest_CustomerMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateMessageRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateMessageRequest)
	// message
	switch x := m.Message.(type) {
	case *CreateMessageRequest_CustomerMessage:
		s := proto.Size(x.CustomerMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetQuestionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQuestionRequest) Reset()         { *m = GetQuestionRequest{} }
func (m *GetQuestionRequest) String() string { return proto.CompactTextString(m) }
func (*GetQuestionRequest) ProtoMessage()    {}
func (*GetQuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{1}
}

func (m *GetQuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuestionRequest.Unmarshal(m, b)
}
func (m *GetQuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuestionRequest.Marshal(b, m, deterministic)
}
func (m *GetQuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuestionRequest.Merge(m, src)
}
func (m *GetQuestionRequest) XXX_Size() int {
	return xxx_messageInfo_GetQuestionRequest.Size(m)
}
func (m *GetQuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuestionRequest proto.InternalMessageInfo

type GetQuestionResponse struct {
	// An unprocessed question.
	//
	// Types that are valid to be assigned to Message:
	//	*GetQuestionResponse_CustomerMessage
	Message              isGetQuestionResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetQuestionResponse) Reset()         { *m = GetQuestionResponse{} }
func (m *GetQuestionResponse) String() string { return proto.CompactTextString(m) }
func (*GetQuestionResponse) ProtoMessage()    {}
func (*GetQuestionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{2}
}

func (m *GetQuestionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuestionResponse.Unmarshal(m, b)
}
func (m *GetQuestionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuestionResponse.Marshal(b, m, deterministic)
}
func (m *GetQuestionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuestionResponse.Merge(m, src)
}
func (m *GetQuestionResponse) XXX_Size() int {
	return xxx_messageInfo_GetQuestionResponse.Size(m)
}
func (m *GetQuestionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuestionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuestionResponse proto.InternalMessageInfo

type isGetQuestionResponse_Message interface {
	isGetQuestionResponse_Message()
}

type GetQuestionResponse_CustomerMessage struct {
	CustomerMessage *CustomerMessage `protobuf:"bytes,1,opt,name=customer_message,json=customerMessage,proto3,oneof"`
}

func (*GetQuestionResponse_CustomerMessage) isGetQuestionResponse_Message() {}

func (m *GetQuestionResponse) GetMessage() isGetQuestionResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetQuestionResponse) GetCustomerMessage() *CustomerMessage {
	if x, ok := m.GetMessage().(*GetQuestionResponse_CustomerMessage); ok {
		return x.CustomerMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetQuestionResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetQuestionResponse_OneofMarshaler, _GetQuestionResponse_OneofUnmarshaler, _GetQuestionResponse_OneofSizer, []interface{}{
		(*GetQuestionResponse_CustomerMessage)(nil),
	}
}

func _GetQuestionResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetQuestionResponse)
	// message
	switch x := m.Message.(type) {
	case *GetQuestionResponse_CustomerMessage:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetQuestionResponse.Message has unexpected type %T", x)
	}
	return nil
}

func _GetQuestionResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetQuestionResponse)
	switch tag {
	case 1: // message.customer_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerMessage)
		err := b.DecodeMessage(msg)
		m.Message = &GetQuestionResponse_CustomerMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetQuestionResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetQuestionResponse)
	// message
	switch x := m.Message.(type) {
	case *GetQuestionResponse_CustomerMessage:
		s := proto.Size(x.CustomerMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetComplaintRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetComplaintRequest) Reset()         { *m = GetComplaintRequest{} }
func (m *GetComplaintRequest) String() string { return proto.CompactTextString(m) }
func (*GetComplaintRequest) ProtoMessage()    {}
func (*GetComplaintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{3}
}

func (m *GetComplaintRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetComplaintRequest.Unmarshal(m, b)
}
func (m *GetComplaintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetComplaintRequest.Marshal(b, m, deterministic)
}
func (m *GetComplaintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetComplaintRequest.Merge(m, src)
}
func (m *GetComplaintRequest) XXX_Size() int {
	return xxx_messageInfo_GetComplaintRequest.Size(m)
}
func (m *GetComplaintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetComplaintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetComplaintRequest proto.InternalMessageInfo

type GetFeedbackRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeedbackRequest) Reset()         { *m = GetFeedbackRequest{} }
func (m *GetFeedbackRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeedbackRequest) ProtoMessage()    {}
func (*GetFeedbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{4}
}

func (m *GetFeedbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeedbackRequest.Unmarshal(m, b)
}
func (m *GetFeedbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeedbackRequest.Marshal(b, m, deterministic)
}
func (m *GetFeedbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeedbackRequest.Merge(m, src)
}
func (m *GetFeedbackRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeedbackRequest.Size(m)
}
func (m *GetFeedbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeedbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeedbackRequest proto.InternalMessageInfo

type MoveMessageRequest struct {
	// The message to move.
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Move message out of this category bucket.
	// If the message does not have this category, this request will fail.
	OldCategory MessageCategory `protobuf:"varint,2,opt,name=old_category,json=oldCategory,proto3,enum=bobsknobshop.messaging.v1.MessageCategory" json:"old_category,omitempty"`
	// Move message to this category bucket.
	NewCategory          MessageCategory `protobuf:"varint,3,opt,name=new_category,json=newCategory,proto3,enum=bobsknobshop.messaging.v1.MessageCategory" json:"new_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MoveMessageRequest) Reset()         { *m = MoveMessageRequest{} }
func (m *MoveMessageRequest) String() string { return proto.CompactTextString(m) }
func (*MoveMessageRequest) ProtoMessage()    {}
func (*MoveMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{5}
}

func (m *MoveMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveMessageRequest.Unmarshal(m, b)
}
func (m *MoveMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveMessageRequest.Marshal(b, m, deterministic)
}
func (m *MoveMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveMessageRequest.Merge(m, src)
}
func (m *MoveMessageRequest) XXX_Size() int {
	return xxx_messageInfo_MoveMessageRequest.Size(m)
}
func (m *MoveMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveMessageRequest proto.InternalMessageInfo

func (m *MoveMessageRequest) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *MoveMessageRequest) GetOldCategory() MessageCategory {
	if m != nil {
		return m.OldCategory
	}
	return MessageCategory_NONE
}

func (m *MoveMessageRequest) GetNewCategory() MessageCategory {
	if m != nil {
		return m.NewCategory
	}
	return MessageCategory_NONE
}

type UpdateStatusRequest struct {
	// The message to update the status for.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// If the message does not have this status, this request will fail.
	OldStatus Status `protobuf:"varint,2,opt,name=old_status,json=oldStatus,proto3,enum=bobsknobshop.messaging.v1.Status" json:"old_status,omitempty"`
	// The new status.
	NewStatus            Status   `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=bobsknobshop.messaging.v1.Status" json:"new_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatusRequest) Reset()         { *m = UpdateStatusRequest{} }
func (m *UpdateStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateStatusRequest) ProtoMessage()    {}
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{6}
}

func (m *UpdateStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatusRequest.Unmarshal(m, b)
}
func (m *UpdateStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatusRequest.Merge(m, src)
}
func (m *UpdateStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateStatusRequest.Size(m)
}
func (m *UpdateStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatusRequest proto.InternalMessageInfo

func (m *UpdateStatusRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateStatusRequest) GetOldStatus() Status {
	if m != nil {
		return m.OldStatus
	}
	return Status_TO_DO
}

func (m *UpdateStatusRequest) GetNewStatus() Status {
	if m != nil {
		return m.NewStatus
	}
	return Status_TO_DO
}

type GetMessageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessageRequest) Reset()         { *m = GetMessageRequest{} }
func (m *GetMessageRequest) String() string { return proto.CompactTextString(m) }
func (*GetMessageRequest) ProtoMessage()    {}
func (*GetMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{7}
}

func (m *GetMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageRequest.Unmarshal(m, b)
}
func (m *GetMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageRequest.Marshal(b, m, deterministic)
}
func (m *GetMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageRequest.Merge(m, src)
}
func (m *GetMessageRequest) XXX_Size() int {
	return xxx_messageInfo_GetMessageRequest.Size(m)
}
func (m *GetMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageRequest proto.InternalMessageInfo

func (m *GetMessageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A message for searching messages using a query.
// A query consists of lists of names and/or categories and/or statuses.
// Each non-empty list is used as a filter. To pass a filter, the respective
// message field value must be present in the list.
// At least one of the lists must be non-empty.
type SearchMessagesRequest struct {
	// A (possibly empty) list of message ids.
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	// A (possibly empty) list of categories.
	Categories []MessageCategory `protobuf:"varint,2,rep,packed,name=categories,proto3,enum=bobsknobshop.messaging.v1.MessageCategory" json:"categories,omitempty"`
	// A (possibly empty) list of statuses.
	Status               []Status `protobuf:"varint,3,rep,packed,name=status,proto3,enum=bobsknobshop.messaging.v1.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchMessagesRequest) Reset()         { *m = SearchMessagesRequest{} }
func (m *SearchMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchMessagesRequest) ProtoMessage()    {}
func (*SearchMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{8}
}

func (m *SearchMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMessagesRequest.Unmarshal(m, b)
}
func (m *SearchMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMessagesRequest.Marshal(b, m, deterministic)
}
func (m *SearchMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMessagesRequest.Merge(m, src)
}
func (m *SearchMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchMessagesRequest.Size(m)
}
func (m *SearchMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMessagesRequest proto.InternalMessageInfo

func (m *SearchMessagesRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *SearchMessagesRequest) GetCategories() []MessageCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *SearchMessagesRequest) GetStatus() []Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type SearchMessagesResponse struct {
	// The messages that passed the search filters.
	CustomerMessages     []*CustomerMessage `protobuf:"bytes,1,rep,name=customer_messages,json=customerMessages,proto3" json:"customer_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SearchMessagesResponse) Reset()         { *m = SearchMessagesResponse{} }
func (m *SearchMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchMessagesResponse) ProtoMessage()    {}
func (*SearchMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{9}
}

func (m *SearchMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMessagesResponse.Unmarshal(m, b)
}
func (m *SearchMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMessagesResponse.Marshal(b, m, deterministic)
}
func (m *SearchMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMessagesResponse.Merge(m, src)
}
func (m *SearchMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchMessagesResponse.Size(m)
}
func (m *SearchMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMessagesResponse proto.InternalMessageInfo

func (m *SearchMessagesResponse) GetCustomerMessages() []*CustomerMessage {
	if m != nil {
		return m.CustomerMessages
	}
	return nil
}

type DeleteMessageRequest struct {
	// The message id.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMessageRequest) Reset()         { *m = DeleteMessageRequest{} }
func (m *DeleteMessageRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMessageRequest) ProtoMessage()    {}
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e6b3531a57ad1c6, []int{10}
}

func (m *DeleteMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMessageRequest.Unmarshal(m, b)
}
func (m *DeleteMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMessageRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMessageRequest.Merge(m, src)
}
func (m *DeleteMessageRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMessageRequest.Size(m)
}
func (m *DeleteMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMessageRequest proto.InternalMessageInfo

func (m *DeleteMessageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateMessageRequest)(nil), "bobsknobshop.messaging.v1.CreateMessageRequest")
	proto.RegisterType((*GetQuestionRequest)(nil), "bobsknobshop.messaging.v1.GetQuestionRequest")
	proto.RegisterType((*GetQuestionResponse)(nil), "bobsknobshop.messaging.v1.GetQuestionResponse")
	proto.RegisterType((*GetComplaintRequest)(nil), "bobsknobshop.messaging.v1.GetComplaintRequest")
	proto.RegisterType((*GetFeedbackRequest)(nil), "bobsknobshop.messaging.v1.GetFeedbackRequest")
	proto.RegisterType((*MoveMessageRequest)(nil), "bobsknobshop.messaging.v1.MoveMessageRequest")
	proto.RegisterType((*UpdateStatusRequest)(nil), "bobsknobshop.messaging.v1.UpdateStatusRequest")
	proto.RegisterType((*GetMessageRequest)(nil), "bobsknobshop.messaging.v1.GetMessageRequest")
	proto.RegisterType((*SearchMessagesRequest)(nil), "bobsknobshop.messaging.v1.SearchMessagesRequest")
	proto.RegisterType((*SearchMessagesResponse)(nil), "bobsknobshop.messaging.v1.SearchMessagesResponse")
	proto.RegisterType((*DeleteMessageRequest)(nil), "bobsknobshop.messaging.v1.DeleteMessageRequest")
}

func init() {
	proto.RegisterFile("bobsknobshop/messaging/v1/messaging.proto", fileDescriptor_8e6b3531a57ad1c6)
}

var fileDescriptor_8e6b3531a57ad1c6 = []byte{
	// 670 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x8d, 0x7f, 0xf9, 0xd1, 0x2a, 0xd3, 0x3f, 0xb4, 0xdb, 0xb4, 0x0a, 0xa1, 0x48, 0xc5, 0x97,
	0x96, 0x8a, 0xda, 0xb4, 0x9c, 0x10, 0x17, 0xd4, 0x00, 0x2d, 0x88, 0x48, 0x34, 0x15, 0x20, 0xf5,
	0x52, 0xad, 0xed, 0xa9, 0xe3, 0xd6, 0xd9, 0x75, 0xb3, 0x9b, 0x5a, 0xe1, 0x6b, 0xc1, 0x17, 0xe1,
	0xca, 0xa7, 0x41, 0xb6, 0xd7, 0x89, 0xe3, 0x26, 0xa6, 0x06, 0x89, 0x9b, 0x67, 0x77, 0xe6, 0xcd,
	0x7b, 0x63, 0xcd, 0xd3, 0xc2, 0x13, 0x8b, 0x5b, 0xe2, 0x8a, 0x71, 0x4b, 0x74, 0x79, 0x60, 0xf6,
	0x50, 0x08, 0xea, 0x7a, 0xcc, 0x35, 0x6f, 0xf6, 0xc7, 0x81, 0x11, 0xf4, 0xb9, 0xe4, 0xe4, 0x41,
	0x36, 0xd5, 0x18, 0xdf, 0xde, 0xec, 0x37, 0x1f, 0xba, 0x9c, 0xbb, 0x3e, 0x9a, 0x71, 0xa2, 0x35,
	0xb8, 0x30, 0xb1, 0x17, 0xc8, 0x61, 0x52, 0xd7, 0xdc, 0x54, 0x97, 0x34, 0xf0, 0x4c, 0xca, 0x18,
	0x97, 0x54, 0x7a, 0x9c, 0x09, 0x75, 0xbb, 0x3d, 0x9b, 0x00, 0xb7, 0x2e, 0xd1, 0x96, 0x2a, 0x51,
	0xff, 0x0a, 0xf5, 0x56, 0x1f, 0xa9, 0xc4, 0x76, 0x9c, 0x83, 0x1d, 0xbc, 0x1e, 0xa0, 0x90, 0xe4,
	0x0b, 0xac, 0xd8, 0x03, 0x21, 0x79, 0x0f, 0xfb, 0xe7, 0x49, 0x39, 0x36, 0xb4, 0x2d, 0x6d, 0x67,
	0xe1, 0x60, 0xd7, 0x98, 0xc9, 0xd8, 0x68, 0xa9, 0x12, 0x05, 0x76, 0x5c, 0xe9, 0xdc, 0xb7, 0x27,
	0x8f, 0x0e, 0x6b, 0x30, 0xaf, 0xf0, 0xf4, 0x3a, 0x90, 0x23, 0x94, 0x27, 0x51, 0x3f, 0x8f, 0x33,
	0xd5, 0x59, 0x1f, 0xc2, 0xda, 0xc4, 0xa9, 0x08, 0x38, 0x13, 0xf8, 0x4f, 0x08, 0xad, 0xc7, 0xad,
	0x5b, 0xbc, 0x17, 0xf8, 0xd4, 0x63, 0x32, 0x65, 0x94, 0xf0, 0x7c, 0x8b, 0xe8, 0x58, 0xd4, 0xbe,
	0x4a, 0x4f, 0x7f, 0x68, 0x40, 0xda, 0xfc, 0x26, 0x3f, 0xb8, 0x47, 0x00, 0x0a, 0xee, 0xdc, 0x73,
	0x62, 0x86, 0xb5, 0x4e, 0x4d, 0x9d, 0xbc, 0x73, 0x48, 0x1b, 0x16, 0xb9, 0xef, 0x9c, 0xdb, 0x54,
	0xa2, 0xcb, 0xfb, 0xc3, 0xc6, 0x7f, 0x5b, 0xda, 0xce, 0x72, 0xa1, 0x04, 0x85, 0xdf, 0x52, 0x15,
	0x9d, 0x05, 0xee, 0x3b, 0x69, 0x10, 0xc1, 0x31, 0x0c, 0xc7, 0x70, 0xd5, 0xf2, 0x70, 0x0c, 0xc3,
	0x34, 0xd0, 0xbf, 0x69, 0xb0, 0xf6, 0x29, 0x70, 0xa8, 0xc4, 0x53, 0x49, 0xe5, 0x40, 0xa4, 0xa2,
	0x1a, 0xa3, 0x19, 0x29, 0x45, 0x69, 0x48, 0x5e, 0x01, 0x44, 0x7a, 0x44, 0x9c, 0xae, 0xd4, 0x3c,
	0x2e, 0x68, 0xaf, 0x70, 0x6b, 0xdc, 0x77, 0x92, 0xcf, 0x08, 0x21, 0x92, 0xa0, 0x10, 0xaa, 0x77,
	0x46, 0x60, 0x18, 0x26, 0x9f, 0xfa, 0x36, 0xac, 0x1e, 0xa1, 0xcc, 0xfd, 0x07, 0x02, 0xff, 0x33,
	0xda, 0x4b, 0xf9, 0xc6, 0xdf, 0xfa, 0x77, 0x0d, 0xd6, 0x4f, 0x91, 0xf6, 0xed, 0xae, 0x4a, 0x1e,
	0x09, 0xac, 0xc3, 0xbd, 0x28, 0x43, 0x34, 0xb4, 0xad, 0xea, 0x4e, 0xad, 0x93, 0x04, 0xe4, 0x3d,
	0x80, 0x9a, 0xac, 0x87, 0x91, 0xb8, 0x6a, 0xc9, 0xd9, 0x66, 0xaa, 0xc9, 0x0b, 0x98, 0x1b, 0x49,
	0xac, 0xde, 0x4d, 0xa2, 0x2a, 0xd0, 0xaf, 0x61, 0x23, 0xcf, 0x7a, 0xb4, 0x14, 0xab, 0xf9, 0xa5,
	0x48, 0x24, 0x94, 0xda, 0x8a, 0xce, 0x4a, 0x6e, 0x27, 0x84, 0xbe, 0x0b, 0xf5, 0xd7, 0xe8, 0xe3,
	0x2d, 0x5b, 0x98, 0x32, 0xd5, 0x83, 0x9f, 0xf3, 0x50, 0x6b, 0xa7, 0xf0, 0x84, 0xc1, 0xd2, 0x84,
	0xa1, 0x10, 0xb3, 0x88, 0xc8, 0x14, 0xeb, 0x69, 0x96, 0x60, 0xae, 0x57, 0xc8, 0x25, 0x2c, 0x64,
	0xec, 0x82, 0xec, 0x15, 0x14, 0xdf, 0x36, 0x9b, 0x92, 0xbd, 0x7c, 0x58, 0xcc, 0xfa, 0x03, 0x31,
	0x8a, 0x9b, 0xe5, 0x8d, 0xe4, 0x8f, 0x94, 0xa5, 0xb6, 0xf3, 0x3b, 0x65, 0x39, 0x7b, 0x2a, 0xdf,
	0x2b, 0xe3, 0x65, 0x85, 0xbd, 0x6e, 0x7b, 0x5e, 0xf9, 0x29, 0x66, 0x3d, 0xa6, 0x70, 0x8a, 0x53,
	0xcc, 0xa8, 0x64, 0xb7, 0x2e, 0xc0, 0xd8, 0x1c, 0xc8, 0xd3, 0xe2, 0x21, 0xfe, 0x95, 0xae, 0x10,
	0x96, 0x27, 0xd7, 0x94, 0x3c, 0x2b, 0xda, 0xf1, 0x69, 0x3e, 0xd4, 0xdc, 0x2f, 0x51, 0x91, 0x78,
	0x80, 0x5e, 0x21, 0x67, 0xb0, 0x34, 0xb1, 0xac, 0x85, 0x2b, 0x37, 0x6d, 0xad, 0x9b, 0x1b, 0x46,
	0xf2, 0x9a, 0x30, 0xd2, 0xa7, 0x86, 0xf1, 0x26, 0x7a, 0x6a, 0xe8, 0x95, 0x43, 0x01, 0x9b, 0xae,
	0x3f, 0x1b, 0xee, 0xa3, 0x76, 0x76, 0xe2, 0x7a, 0xb2, 0x3b, 0xb0, 0x0c, 0x9b, 0xf7, 0xcc, 0x63,
	0x3a, 0xe4, 0x9f, 0x29, 0xfb, 0xc0, 0x39, 0x4b, 0x5e, 0x2d, 0x21, 0xef, 0x5f, 0x5d, 0xf8, 0x3c,
	0xdc, 0x73, 0x91, 0xc5, 0x07, 0xe6, 0xcc, 0x87, 0xc9, 0xcb, 0x51, 0x60, 0xcd, 0xc5, 0xa9, 0xcf,
	0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x3b, 0x5f, 0xf3, 0x47, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagingClient is the client API for Messaging service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagingClient interface {
	// Stores a new message.
	// The message status will be TO_DO.
	CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Retrieves an open question.
	// The message status will be set to IN_PROCESS.
	GetQuestion(ctx context.Context, in *GetQuestionRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Retrieves an open complaint.
	// The message status will be set to IN_PROCESS.
	GetComplaint(ctx context.Context, in *GetComplaintRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Retrieves an open feedback message.
	// The message status will be set to IN_PROCESS.
	GetFeedback(ctx context.Context, in *GetFeedbackRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Moves a message to a different category.
	// The message status will be reset to TO_DO.
	MoveMessage(ctx context.Context, in *MoveMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Updates a message status.
	// If the message does not exist (because it was removed), this action will
	// fail.
	UpdateStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Retrieves a message by its name.
	GetMessage(ctx context.Context, in *GetMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error)
	// Searches for messages matching the query.
	// See the SearchMessagesRequest description for query details.
	SearchMessages(ctx context.Context, in *SearchMessagesRequest, opts ...grpc.CallOption) (*SearchMessagesResponse, error)
	// Permanently deletes a message.
	DeleteMessage(ctx context.Context, in *DeleteMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type messagingClient struct {
	cc *grpc.ClientConn
}

func NewMessagingClient(cc *grpc.ClientConn) MessagingClient {
	return &messagingClient{cc}
}

func (c *messagingClient) CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/CreateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetQuestion(ctx context.Context, in *GetQuestionRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/GetQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetComplaint(ctx context.Context, in *GetComplaintRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/GetComplaint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetFeedback(ctx context.Context, in *GetFeedbackRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/GetFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) MoveMessage(ctx context.Context, in *MoveMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/MoveMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) UpdateStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetMessage(ctx context.Context, in *GetMessageRequest, opts ...grpc.CallOption) (*CustomerMessage, error) {
	out := new(CustomerMessage)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/GetMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) SearchMessages(ctx context.Context, in *SearchMessagesRequest, opts ...grpc.CallOption) (*SearchMessagesResponse, error) {
	out := new(SearchMessagesResponse)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/SearchMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) DeleteMessage(ctx context.Context, in *DeleteMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bobsknobshop.messaging.v1.Messaging/DeleteMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessagingServer is the server API for Messaging service.
type MessagingServer interface {
	// Stores a new message.
	// The message status will be TO_DO.
	CreateMessage(context.Context, *CreateMessageRequest) (*CustomerMessage, error)
	// Retrieves an open question.
	// The message status will be set to IN_PROCESS.
	GetQuestion(context.Context, *GetQuestionRequest) (*CustomerMessage, error)
	// Retrieves an open complaint.
	// The message status will be set to IN_PROCESS.
	GetComplaint(context.Context, *GetComplaintRequest) (*CustomerMessage, error)
	// Retrieves an open feedback message.
	// The message status will be set to IN_PROCESS.
	GetFeedback(context.Context, *GetFeedbackRequest) (*CustomerMessage, error)
	// Moves a message to a different category.
	// The message status will be reset to TO_DO.
	MoveMessage(context.Context, *MoveMessageRequest) (*CustomerMessage, error)
	// Updates a message status.
	// If the message does not exist (because it was removed), this action will
	// fail.
	UpdateStatus(context.Context, *UpdateStatusRequest) (*CustomerMessage, error)
	// Retrieves a message by its name.
	GetMessage(context.Context, *GetMessageRequest) (*CustomerMessage, error)
	// Searches for messages matching the query.
	// See the SearchMessagesRequest description for query details.
	SearchMessages(context.Context, *SearchMessagesRequest) (*SearchMessagesResponse, error)
	// Permanently deletes a message.
	DeleteMessage(context.Context, *DeleteMessageRequest) (*empty.Empty, error)
}

func RegisterMessagingServer(s *grpc.Server, srv MessagingServer) {
	s.RegisterService(&_Messaging_serviceDesc, srv)
}

func _Messaging_CreateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).CreateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/CreateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).CreateMessage(ctx, req.(*CreateMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/GetQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetQuestion(ctx, req.(*GetQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetComplaint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComplaintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetComplaint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/GetComplaint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetComplaint(ctx, req.(*GetComplaintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/GetFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetFeedback(ctx, req.(*GetFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_MoveMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).MoveMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/MoveMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).MoveMessage(ctx, req.(*MoveMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).UpdateStatus(ctx, req.(*UpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetMessage(ctx, req.(*GetMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_SearchMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).SearchMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/SearchMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).SearchMessages(ctx, req.(*SearchMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_DeleteMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).DeleteMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.messaging.v1.Messaging/DeleteMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).DeleteMessage(ctx, req.(*DeleteMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Messaging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bobsknobshop.messaging.v1.Messaging",
	HandlerType: (*MessagingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMessage",
			Handler:    _Messaging_CreateMessage_Handler,
		},
		{
			MethodName: "GetQuestion",
			Handler:    _Messaging_GetQuestion_Handler,
		},
		{
			MethodName: "GetComplaint",
			Handler:    _Messaging_GetComplaint_Handler,
		},
		{
			MethodName: "GetFeedback",
			Handler:    _Messaging_GetFeedback_Handler,
		},
		{
			MethodName: "MoveMessage",
			Handler:    _Messaging_MoveMessage_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _Messaging_UpdateStatus_Handler,
		},
		{
			MethodName: "GetMessage",
			Handler:    _Messaging_GetMessage_Handler,
		},
		{
			MethodName: "SearchMessages",
			Handler:    _Messaging_SearchMessages_Handler,
		},
		{
			MethodName: "DeleteMessage",
			Handler:    _Messaging_DeleteMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bobsknobshop/messaging/v1/messaging.proto",
}
