// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bobsknobshop/categorising/v1/categorising.proto

package categorising

import (
	fmt "fmt"
	v1 "github.com/HayoVanLoon/protoworkflow-genproto/bobsknobshop/messaging/v1"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetCategoryRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCategoryRequest) Reset()         { *m = GetCategoryRequest{} }
func (m *GetCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetCategoryRequest) ProtoMessage()    {}
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79e1d5934b16af15, []int{0}
}

func (m *GetCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCategoryRequest.Unmarshal(m, b)
}
func (m *GetCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCategoryRequest.Merge(m, src)
}
func (m *GetCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetCategoryRequest.Size(m)
}
func (m *GetCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCategoryRequest proto.InternalMessageInfo

func (m *GetCategoryRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type GetCategoryResponse struct {
	Category             v1.MessageCategory `protobuf:"varint,2,opt,name=category,proto3,enum=bobsknobshop.messaging.v1.MessageCategory" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetCategoryResponse) Reset()         { *m = GetCategoryResponse{} }
func (m *GetCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetCategoryResponse) ProtoMessage()    {}
func (*GetCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79e1d5934b16af15, []int{1}
}

func (m *GetCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCategoryResponse.Unmarshal(m, b)
}
func (m *GetCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCategoryResponse.Merge(m, src)
}
func (m *GetCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetCategoryResponse.Size(m)
}
func (m *GetCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCategoryResponse proto.InternalMessageInfo

func (m *GetCategoryResponse) GetCategory() v1.MessageCategory {
	if m != nil {
		return m.Category
	}
	return v1.MessageCategory_NONE
}

func init() {
	proto.RegisterType((*GetCategoryRequest)(nil), "bobsknobshop.categorising.v1.GetCategoryRequest")
	proto.RegisterType((*GetCategoryResponse)(nil), "bobsknobshop.categorising.v1.GetCategoryResponse")
}

func init() {
	proto.RegisterFile("bobsknobshop/categorising/v1/categorising.proto", fileDescriptor_79e1d5934b16af15)
}

var fileDescriptor_79e1d5934b16af15 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x8d, 0x88, 0xe8, 0x2a, 0x1e, 0xd6, 0x4b, 0x09, 0x05, 0x4b, 0x2e, 0x06, 0xc1, 0x5d,
	0x53, 0x8f, 0xde, 0x2c, 0xa8, 0x07, 0x05, 0xe9, 0x41, 0x41, 0xf0, 0xb0, 0x1b, 0xc6, 0x6d, 0x6c,
	0xba, 0x13, 0xb3, 0xd3, 0xd4, 0x80, 0x47, 0x7f, 0xb8, 0x90, 0x84, 0x90, 0x20, 0x04, 0x7a, 0xcb,
	0x0b, 0xef, 0x9b, 0x37, 0x6f, 0x96, 0x49, 0x8d, 0xda, 0x2d, 0x2d, 0x6a, 0xb7, 0xc0, 0x4c, 0xc6,
	0x8a, 0xc0, 0x60, 0x9e, 0xb8, 0xc4, 0x1a, 0x59, 0x44, 0x3d, 0x2d, 0xb2, 0x1c, 0x09, 0xf9, 0xb8,
	0x0b, 0x88, 0x9e, 0xa1, 0x88, 0xfc, 0xb1, 0x41, 0x34, 0x29, 0x48, 0x95, 0x25, 0x52, 0x59, 0x8b,
	0xa4, 0x28, 0x41, 0xeb, 0x6a, 0xd6, 0x3f, 0xef, 0x85, 0xad, 0xc0, 0x39, 0x65, 0x9a, 0x24, 0xd4,
	0x9f, 0x10, 0x53, 0x63, 0x0c, 0x42, 0xc6, 0xef, 0x81, 0x66, 0xf5, 0xf0, 0x72, 0x0e, 0x5f, 0x6b,
	0x70, 0xc4, 0x39, 0xdb, 0x23, 0xf8, 0xa6, 0x91, 0x37, 0xf1, 0xc2, 0xc3, 0x79, 0xf5, 0x1d, 0xbc,
	0xb3, 0xd3, 0x9e, 0xd3, 0x65, 0x68, 0x1d, 0xf0, 0x3b, 0x76, 0xd0, 0xac, 0x56, 0x8e, 0x76, 0x27,
	0x5e, 0x78, 0x32, 0xbd, 0x10, 0xbd, 0xc5, 0xdb, 0x70, 0x51, 0x44, 0xe2, 0xa9, 0x12, 0xd0, 0x4e,
	0x69, 0xd9, 0xe9, 0xaf, 0xc7, 0x8e, 0x67, 0x9d, 0x8e, 0x9c, 0xd8, 0x51, 0x27, 0x8f, 0x5f, 0x89,
	0xa1, 0x73, 0x88, 0xff, 0x25, 0xfc, 0x68, 0x0b, 0xa2, 0x2e, 0x13, 0xec, 0xdc, 0xfe, 0xb0, 0x33,
	0x93, 0x0e, 0x82, 0xcf, 0xde, 0xdb, 0xab, 0x49, 0x68, 0xb1, 0xd6, 0x22, 0xc6, 0x95, 0x7c, 0x50,
	0x25, 0xbe, 0x28, 0xfb, 0x88, 0x68, 0x65, 0x75, 0xd2, 0x0d, 0xe6, 0xcb, 0x8f, 0x14, 0x37, 0x97,
	0x06, 0x6c, 0xf5, 0x63, 0xf0, 0xe1, 0x6f, 0xba, 0x5a, 0xef, 0x57, 0xc0, 0xf5, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xcd, 0xb1, 0xab, 0x08, 0x2c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CategorisingClient is the client API for Categorising service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategorisingClient interface {
	// Determines sentiment for the given text.
	GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error)
}

type categorisingClient struct {
	cc *grpc.ClientConn
}

func NewCategorisingClient(cc *grpc.ClientConn) CategorisingClient {
	return &categorisingClient{cc}
}

func (c *categorisingClient) GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error) {
	out := new(GetCategoryResponse)
	err := c.cc.Invoke(ctx, "/bobsknobshop.categorising.v1.Categorising/GetCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CategorisingServer is the server API for Categorising service.
type CategorisingServer interface {
	// Determines sentiment for the given text.
	GetCategory(context.Context, *GetCategoryRequest) (*GetCategoryResponse, error)
}

func RegisterCategorisingServer(s *grpc.Server, srv CategorisingServer) {
	s.RegisterService(&_Categorising_serviceDesc, srv)
}

func _Categorising_GetCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategorisingServer).GetCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bobsknobshop.categorising.v1.Categorising/GetCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategorisingServer).GetCategory(ctx, req.(*GetCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Categorising_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bobsknobshop.categorising.v1.Categorising",
	HandlerType: (*CategorisingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCategory",
			Handler:    _Categorising_GetCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bobsknobshop/categorising/v1/categorising.proto",
}
